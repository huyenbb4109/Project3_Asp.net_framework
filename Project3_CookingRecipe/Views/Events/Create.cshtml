@model Project3_CookingRecipe.Models.Event

@{
    Layout = "~/Views/Shared/_LayoutIndex.cshtml";
    ViewBag.Title = "Create Event";
}

@using (Html.BeginForm("Create", "Events", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <div class="form-group">
        <label class="control-label col-md-2">Image</label>

        <div class="col-md-10">
            <div> <img height="130" width="130" id="user_img"> </div>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Upload Image <span class="sao">*</span></label>

        <div class="col-md-10">
            <div name="filedrag" style="position: absolute; width: 100%; height: 37.4px; z-index: -1;"></div>
            <input type="text" id="getImg" class="input-img" disabled style="border-top-left-radius: 0.25rem; border-bottom-left-radius: 0.25rem;">
            <input type="file" name="image" class="filestyle" data-btnclass="btn-primary" id="filestyle-4" tabindex="-1" style="display: none;" onchange="show(this)">
            <span class="group-span-filestyle input-group-btn" tabindex="0">
                <label for="filestyle-4" style="margin-bottom: 4px;" class="btn btn-primary">
                    <span class="buttonText">Upload</span>
                </label>
            </span>

            <div id="validate_img" class="text-danger"></div>
        </div>
    </div>

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NameEvent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameEvent, new { htmlAttributes = new { @class = "form-control", @id = "namefood", @maxlength = "100", @data_val = "true", @required = "required" } })

                <span class="character_count"></span>
                <br />
                @Html.ValidationMessageFor(model => model.NameEvent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfParticipants, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberOfParticipants, new { htmlAttributes = new { @class = "form-control" } })

                <br />
                @Html.ValidationMessageFor(model => model.NumberOfParticipants, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", @type = "date" } })

                <br />
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control", @type = "date" } })

                <br />
                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Prize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Prize, new { htmlAttributes = new { @class = "form-control", @maxlength = "100", @data_val = "true" } })

                <span class="character_count"></span>
                @Html.ValidationMessageFor(model => model.Prize, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="cc">
                <input type="submit" value="Create" id="submit" class="btn-submit" onclick="return validate();" />
            </div>
        </div>
    </div>
</div>
}

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script>
            function show(input) {
                debugger;
                var validExtensions = ['jpg', 'png', 'jpeg', 'jfif']; //array of valid extensions
                var fileName = input.files[0].name;
                var fileNameExt = fileName.substr(fileName.lastIndexOf('.') + 1);
                var fsize = $(input)[0].files[0].size;

                if ($.inArray(fileNameExt, validExtensions) == -1) {
                    input.type = ''
                    input.type = 'file'
                    $('#user_img').attr('src', "");
                    $('#validate_img').html("Only these file types are accepted : " + validExtensions.join(', '));
                    //alert("Only these file types are accepted : " + validExtensions.join(', '));
                }
                else {
                    if (input.files && input.files[0]) {
                        var fileName1 = $('input:file').val().match(/[^\\/]*$/)[0];

                        var filerdr = new FileReader();

                        filerdr.onload = function (e) {
                            if (fsize > 1048576) {
                                $('#validate_img').html(fsize + " bites\nToo big!");
                            }
                            //else {
                            //    $('#validate_img').html(fsize + " bites\nYou are good to go!");
                            //    //alert(fsize + " bites\nYou are good to go!");

                            //}
                            $('#user_img').attr('src', e.target.result);
                            $('#getImg').val(fileName1);
                        }
                        filerdr.readAsDataURL(input.files[0]);
                        $('#validate_img').html("");
                    }
                }
            }

            function validate() {
                if ($('#filestyle-4').val() == "") {
                    $('#validate_img').html("You haven't selected a photo yet! ");
                    return false;
                }
                return true;
            }

            $(document).ready(function () {
                $("input, textarea").on("keyup", function () {
                    if (typeof $(this).attr('maxlength') !== "undefined" && $(this).attr('maxlength') !== false) {

                        length = $(this).val().length;
                        max = parseInt($(this).attr('maxlength'));
                        //$('input').val(max - $(this).val().length);
                        if (length != 0) {
                            $(this).next(".character_count").html("(" + length + "/" + max + " characters)");
                        } else {
                            $(this).next(".character_count").html("");
                        }
                    }
                });

            });
        </script>
    }

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
